♥ Clases ♥

Las clases pueden tener varias cosas dentro esto se llama  miembros de clase que pueden ser:
	-Campos (deben preferentemente ser privados) esto son const y readonly son campos
	-Propiedades (get set)
	-eventos que reaccion al ejecutarse un metodo.
	-Metodos funciones propias de la clase
A los metodos se les puede hacer overload, siempre y cuando cada overload tenga una unica signature
es decir mismo nombre de metodo pero distintos parametros (tipos) de entrada. A los metodos siempre
se les pasa un value, no una referencia.

Los objectos creados a partir de una clase siempre tendran una referencia.

Encapsulacion: esconder ciertos detalles de nuestro codigo, los metodos y las campos son quienes
albergan ese codigo encapsulado, con los modificadores de acceso podemos controlar quien puede ver el codigo

Herencia: nos permite reusar codigo entre clases similares, es decir una clase padre puede heredar, 
campos, propiedades, metodos, eventos. La clase hijo tendra todos los miembros de clase del padre, 
y aparte podra tener miembros de clase propios que ya no seran accesibles por el padre.

Cuando se construye un objeto de la clase hijo de alguna forma tambien estamos haciendo un objeto de la clase 
padre. El constructor que manda es el del padre, primero hay que cumplir los requerimientos de la clase padre 
y despues los de la clase hija, esto se hace usando : base() dentro de los() pasamos los parametros requeridos 
por el padre --> public ClaseHija (type parm1, type param2...): base(param1)

Todo en C# hereda de una clase llamada Object que esta en la libreria System, todas las clases y los typos


Polimorfismo: hace que un objetos del mismo typo se comporten diferente. 



